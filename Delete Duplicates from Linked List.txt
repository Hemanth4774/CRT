Delete Duplicates from Linked List

Write a Program to delete the duplicate elements from the given list.

Input Format

Read elements upto -1

Constraints

1<=n<=10^7

Output Format

print output

Sample Input 0

1
2
3
4
3
2
-1
Sample Output 0

Linked list before removal of duplicates
1
2
3
4
3
2
Linked list after removal of duplicates
1
2
3
4
Sample Input 1

1
1
2
2
3
3
-1
Sample Output 1

Linked list before removal of duplicates
1
1
2
2
3
3
Linked list after removal of duplicates
1
2
3

class Node:
    def __init__(self,x):
        self.data=x
        self.next=None
class delduplicates:
    def __init__(self):
        self.head=self.tail=None
    def insert(self,x):
        n=Node(x)
        if self.head==None:
            self.head=self.tail=n
        else:
            self.tail.next=n
            self.tail=n
    def before(self):
        temp=self.head
        print("Linked list before removal of duplicates")
        while temp!=None:
            print(temp.data)
            temp=temp.next
    def after(self):
        temp1=self.head
        while temp1 is not None:
            temp2=temp1
            while temp2.next!=None:
                if temp1.data==temp2.next.data:
                    temp2.next=temp2.next.next
                else:
                    temp2=temp2.next
            temp1=temp1.next
    def show(self):
        temp3=self.head
        print("Linked list after removal of duplicates")
        while temp3!=None:
            print(temp3.data)
            temp3=temp3.next
s1=delduplicates()
while True:
    x=int(input())
    if x==-1:
        break
    else:
        s1.insert(x)
s1.before()
s1.after()
s1.show()